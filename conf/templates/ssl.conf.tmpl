# Created July 5, 2016 using recommendations from
#     https://cipherli.st/
#     https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
#     https://weakdh.org/sysadmin.html
#     https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
# for nginx 1.6.2 and openssl 1.0.1t


ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;

# Best cipher list
ssl_ciphers               "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
# Less-secure list that will allow some legacy browsers
# ssl_ciphers               "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:ECDHE-RSA-AES128-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA128:DHE-RSA-AES128-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA128:ECDHE-RSA-AES128-SHA384:ECDHE-RSA-AES128-SHA128:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA128:DHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA384:AES128-GCM-SHA128:AES128-SHA128:AES128-SHA128:AES128-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";


ssl_prefer_server_ciphers on;


ssl_ecdh_curve            secp384r1; # Requires nginx >= 1.1.0


ssl_session_cache         shared:SSL:50m;

# https://timtaubert.de/blog/2014/11/the-sad-state-of-server-side-tls-session-resumption-implementations/
# https://www.imperialviolet.org/2013/06/27/botchingpfs.html
# https://tools.ietf.org/html/rfc5077
ssl_session_tickets       off; # Requires nginx >= 1.5.9


ssl_stapling              on; # Requires nginx >= 1.3.7


ssl_stapling_verify       on; # Requires nginx => 1.3.7

# Note: the HSTS header is intentionally changed below, compared to the samples provided by cipherli.st
# We do not want the 'preload' keyword, since rather than being a configuration change for the purpose of increased security,
# the 'preload' keyword is simply a way of requesting Google and other browsers to pass your domain on to the developers to be
# included into the permanent HSTS Preload list hard-coded into the browser. While a HSTS entry can easily be cleared on individual
# browsers (chrome://net-internals/#hsts), getting a domain removed from Google's HSTS Preload list may be impossible!
# add_header                Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
add_header                Strict-Transport-Security "max-age=63072000; includeSubDomains";


add_header                X-Frame-Options DENY;


add_header                X-Content-Type-Options nosniff;


resolver                  208.67.222.222 208.67.220.220 valid=300s;


resolver_timeout          5s;

# Protect against the Logjam attack
# Generated with 'openssl dhparam -out dhparams-2048.pem 2048' (should be the same bit length as your SSL key)
ssl_dhparam               {{settings.CONF_DIR}}/secret/dhparams-2048.pem;





# In your own site-specific conf, specify the following settings:
#ssl                      on;


#ssl_certificate          /etc/letsencrypt/live/<site>/fullchain.pem;


#ssl_certificate_key      /etc/letsencrypt/live/<site>/privkey.pem;

# required for ssl_stapling to work
#ssl_trusted_certificate  /etc/letsencrypt/live/<site>/chain.pem;
